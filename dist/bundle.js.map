{
  "version": 3,
  "sources": ["../js/confFactory.js", "../js/trajectory.js", "../js/planetFactory.js", "../index.js"],
  "sourcesContent": ["/**\n *\n *\n * @export\n * @param {number} iterations\n * @param {[{accum: [], prevRadius: number}]} args\n * @return {{id: string, radius: number, speed: number, rgbaMain: string, rgbaSec: string}}\n */\nexport default function confFactory(iterations, ...args) {\n  const [accum = [], prevRadius = 0] = args;\n  const randChanel = () => Math.floor(Math.random() * 255);\n  const randRGB = () => `${randChanel()},${randChanel()},${randChanel()}`;\n  const radius = Math.floor(Math.random() * (300 - 100) + 100);\n  if (iterations) {\n    if (radius === prevRadius) {\n      return confFactory(iterations, accum, radius);\n    }\n    accum.push({\n      radius,\n      id: Math.random().toString(36).substring(7),\n      speed: Math.floor(Math.random() * (10 - 2) + 2),\n      rgbaMain: randRGB(),\n      rgbaSec: randRGB(),\n    });\n    return confFactory(iterations - 1, accum, radius);\n  }\n  return accum;\n}\n", "const m = Math;\nconst p = m.PI;\nconst maxDegrees = 360;\n/**\n *\n *\n * @param {number} degrees\n * @return {number}\n */\nfunction getRadian(degrees) {\n  return (degrees * p) / 180;\n}\n/**\n *\n *\n * @export\n * @param {{ radius: number, speed: number, planet: HTMLDivElement, startPosition: number }} { radius, speed, planet, startPosition }\n * @return {{interval: NodeJS.Timeout}}\n */\nexport default function ({ radius, speed, planet, startPosition = 0 }) {\n  let deg = startPosition;\n  function rotate() {\n    ++deg;\n    if (deg === maxDegrees) {\n      deg = 0;\n    }\n    planet.style.left = `${m.sin(getRadian(deg)) * radius}px`;\n    planet.style.top = `${m.cos(getRadian(deg)) * radius}px`;\n  }\n  const rotation = setInterval(rotate, speed);\n  return { ineterval: rotation };\n}\n", "import trajectory from \"./trajectory\";\n\n/**\n *\n *\n * @param {string} id\n * @return {HTMLDivElement}\n */\nfunction createHTMlElement(id) {\n  const elem = document.createElement(\"div\");\n  elem.setAttribute(\"class\", \"planet\");\n  elem.setAttribute(\"id\", id);\n  return elem;\n}\n\n/**\n *\n *\n * @param {HTMLDivElement} elem\n * @param {{rgbaMain: string, rgbaSec: string}} gradient\n * @return {HTMLDivElement}\n */\nfunction setPlanetColor(elem, gradient) {\n  elem.style.backgroundImage = `linear-gradient(to top right, rgba(${gradient.rgbaMain}), rgba(${gradient.rgbaSec}))`;\n  return elem;\n}\n/**\n * Not a clear function\n *\n * @param {HTMLDivElement} sol\n * @param {HTMLDivElement} elem\n */\nfunction appendToSol(sol, elem) {\n  sol.appendChild(elem);\n}\n\n/**\n *\n *\n * @export\n * @param {HTMLElement} sol\n * @param {[{rgbaMain: string, rgbaSec: string, radius: number, speed: number}]} conf\n * @return {any[]}\n */\nexport default function (sol, conf) {\n  const appendToSystem = appendToSol.bind(this, sol);\n  const system =\n    Array.isArray(conf) && sol\n      ? {\n          system: conf.reduce(\n            (acc, { rgbaMain, rgbaSec, radius, speed, id }) => {\n              let element = createHTMlElement(id);\n              element = setPlanetColor(element, { rgbaMain, rgbaSec });\n              const interval = trajectory({ radius, speed, planet: element });\n              appendToSystem(element);\n              acc.push({ htmlElem: element, interval });\n              return acc;\n            },\n            []\n          ),\n          err: null,\n        }\n      : { system: [], err: new Error(\"Invalid config param\") };\n\n  return system;\n}\n", "import confFactory from \"./js/confFactory\";\nimport planetFactory from \"./js/planetFactory\";\n\n(() => {\n  console.log(\"start\");\n  const solar = document.querySelector(\".sol\");\n  const config = confFactory(5);\n  const {\n    system: { htmlElem, interval },\n    err,\n  } = planetFactory(solar, config);\n  if (err) {\n    console.error(err);\n  }\n})();\n"],
  "mappings": "MAQe,WAAqB,KAAe,GACjD,GAAM,CAAC,EAAQ,GAAI,EAAa,GAAK,EAC/B,EAAa,IAAM,KAAK,MAAM,KAAK,SAAW,KAC9C,EAAU,IAAM,GAAG,OAAgB,OAAgB,MACnD,EAAS,KAAK,MAAM,KAAK,SAAY,KAAM,KAAO,KACxD,MAAI,GACE,IAAW,EACN,EAAY,EAAY,EAAO,GAExC,GAAM,KAAK,CACT,SACA,GAAI,KAAK,SAAS,SAAS,IAAI,UAAU,GACzC,MAAO,KAAK,MAAM,KAAK,SAAY,IAAK,GAAK,GAC7C,SAAU,IACV,QAAS,MAEJ,EAAY,EAAa,EAAG,EAAO,IAErC,EC1BT,GAAM,GAAI,KACJ,EAAI,EAAE,GACN,EAAa,IAOnB,WAAmB,GACjB,MAAQ,GAAU,EAAK,IASV,WAAU,CAAE,SAAQ,QAAO,SAAQ,gBAAgB,IAChE,GAAI,GAAM,EACV,aACE,EAAE,EACE,IAAQ,GACV,GAAM,GAER,EAAO,MAAM,KAAO,GAAG,EAAE,IAAI,EAAU,IAAQ,MAC/C,EAAO,MAAM,IAAM,GAAG,EAAE,IAAI,EAAU,IAAQ,MAGhD,MAAO,CAAE,UADQ,YAAY,EAAQ,ICrBvC,WAA2B,GACzB,GAAM,GAAO,SAAS,cAAc,OACpC,SAAK,aAAa,QAAS,UAC3B,EAAK,aAAa,KAAM,GACjB,EAUT,WAAwB,EAAM,GAC5B,SAAK,MAAM,gBAAkB,sCAAsC,EAAS,mBAAmB,EAAS,YACjG,EAQT,WAAqB,EAAK,GACxB,EAAI,YAAY,GAWH,WAAU,EAAK,GAC5B,GAAM,GAAiB,EAAY,KAAK,KAAM,GAmB9C,MAjBE,OAAM,QAAQ,IAAS,EACnB,CACE,OAAQ,EAAK,OACX,CAAC,EAAK,CAAE,WAAU,UAAS,SAAQ,QAAO,SACxC,GAAI,GAAU,EAAkB,GAChC,EAAU,EAAe,EAAS,CAAE,WAAU,YAC9C,GAAM,GAAW,EAAW,CAAE,SAAQ,QAAO,OAAQ,IACrD,SAAe,GACf,EAAI,KAAK,CAAE,SAAU,EAAS,aACvB,GAET,IAEF,IAAK,MAEP,CAAE,OAAQ,GAAI,IAAK,GAAI,OAAM,yBC3DrC,AAAC,MACC,QAAQ,IAAI,SACZ,GAAM,GAAQ,SAAS,cAAc,QAC/B,EAAS,EAAY,GACrB,CACJ,OAAQ,CAAE,WAAU,YACpB,OACE,EAAc,EAAO,GACzB,AAAI,GACF,QAAQ,MAAM",
  "names": []
}
